/*   1:    */ package Logic;
/*   2:    */ 
/*   3:    */ import java.io.PrintStream;
/*   4:    */ 
/*   5:    */ public class PowerBoot
/*   6:    */   implements Device, Constants
/*   7:    */ {
/*   8: 18 */   public static int DevId10 = 8;
/*   9:    */   public BusRegMem data;
/*  10:    */   private VirTimer pwbtim;
/*  11: 23 */   private boolean pwfailflag = false;
/*  12: 24 */   private boolean intena = true;
/*  13: 25 */   private boolean pwgone = false;
/*  14: 28 */   private static final int[] boottable = { 98432, 86016, 229376, 212992, 208194, 204800, 208207, 208202, 208204, 207365, 233472, 298688, 278528, 271050, 272586, 272586, 273915, 273091, 273919, 272342, 271574, 273091, 273370, 271360, 271040, 273916, 273913, 273101, 273918, 270553, 271063, 274336, 273101, 271569, 273354, 274156, 274414, 274407, 270399, 274176, 302784, 429962, 409600, 405503, 401408, 401408, 401408, 401408, 429974, 401408, 403082, 403632, 402112, 405480, 404127, 402570, 405024, 404119, 402058, 405408, 404120, 402060, 401596, 402145, 405320, 402582, 405480, 404374, 402060, 401582, 402095, 403083, 404120, 401464, 404609, 401408, 401408, 404505, 404146, 404510, 403084, 402060, 404400, 404489, 404152, 404494, 404149, 401600, 403683, 405025, 402061, 405250, 404506, 404492, 404620, 402095, 403083, 402058, 405440, 402155, 402154, 403121, 403606, 404171, 403085, 402059, 403166, 402060, 403198, 403632, 403181, 403606, 404157, 403683, 405264, 404190, 403086, 402174, 402157, 402061, 404173, 401408, 403342, 402574, 405376, 404186, 401408, 402174, 405062, 404998, 404998, 402157, 404451, 404146, 401414, 401408, 401408, 434113, 364426, 344064, 335872, 335872, 335872, 335872, 335872, 364438, 335872, 337546, 338096, 336576, 339944, 338591, 337034, 339488, 338583, 336522, 339872, 338584, 336524, 336060, 336609, 339784, 337046, 339944, 338838, 336524, 336046, 336559, 337547, 338584, 335928, 339073, 335872, 335872, 338969, 338610, 338974, 337548, 336524, 338864, 338953, 338616, 338958, 338613, 336064, 338147, 339489, 336525, 339714, 338970, 338956, 339084, 336559, 337547, 336522, 339904, 336619, 336618, 337585, 338070, 338635, 337549, 336523, 337630, 336524, 337662, 338096, 337645, 338070, 338621, 338147, 339728, 338654, 337550, 336638, 336621, 336525, 338637, 335872, 337806, 337038, 339840, 338650, 335872, 336638, 339526, 339462, 339462, 336621, 338915, 338610, 335878, 335872, 335872, 368577, 561134, 540672, 535578, 535577, 535279, 535582, 536134, 536070, 536392, 535292, 536070, 535577, 535287, 535580, 536336, 534526, 534270, 535278, 532480, 565230, 495598, 475136, 470028, 470025, 469743, 470030, 470598, 470534, 470856, 469756, 470534, 470025, 469751, 470030, 470800, 468990, 468734, 469743, 466944, 499694, 626485, 606208, 598780, 601110, 599798, 600280, 601858, 601988, 601633, 599799, 601858, 601988, 599800, 601858, 601988, 601601, 599801, 598776, 601680, 600289, 598776, 601633, 598777, 602024, 600784, 599032, 601664, 599288, 600774, 599287, 600765, 598774, 601664, 600289, 600280, 601858, 600757, 598016, 601792, 598778, 599803, 598780, 600305, 599291, 600797, 601048, 598016, 599805, 598781, 601610, 601610, 601610, 598270, 600305, 598774, 599798, 598781, 598271, 600305, 598774, 599798, 601057, 598016, 601105, 600818, 601110, 601073, 598016, 598016, 598016, 598016, 601974, 598016, 598144, 598016, 598143, 598079, 630581 };
/*  15:    */   
/*  16:    */   public PowerBoot(BusRegMem data)
/*  17:    */   {
/*  18:396 */     this.data = data;
/*  19:    */     
/*  20:398 */     VirListener pwb = new VirListener()
/*  21:    */     {
/*  22:    */       public void actionPerformed()
/*  23:    */       {
/*  24:400 */         System.out.println("Power failed");
/*  25:401 */         PowerBoot.this.setpwb(true);
/*  26:    */       }
/*  27:403 */     };
/*  28:404 */     this.pwbtim = new VirTimer(data.virqueue, 100000000, pwb);
/*  29:405 */     this.pwbtim.setRepeats(false);
/*  30:    */   }
/*  31:    */   
/*  32:    */   public void Decode(int devcode, int opcode)
/*  33:    */   {
/*  34:409 */     switch (opcode)
/*  35:    */     {
/*  36:    */     case 1: 
/*  37:    */       break;
/*  38:    */     case 2: 
/*  39:    */       break;
/*  40:    */     }
/*  41:    */   }
/*  42:    */   
/*  43:    */   public void Execute(int devcode, int opcode)
/*  44:    */   {
/*  45:417 */     switch (opcode)
/*  46:    */     {
/*  47:    */     case 1: 
/*  48:    */       break;
/*  49:    */     case 2: 
/*  50:419 */       this.data.skipbus = (this.pwfailflag | this.pwgone); break;
/*  51:    */     case 3: 
/*  52:420 */       this.pwfailflag = false;clearIntReq();
/*  53:    */     }
/*  54:    */   }
/*  55:    */   
/*  56:    */   private void setpwb(boolean set)
/*  57:    */   {
/*  58:425 */     this.data.run = true;
/*  59:    */   }
/*  60:    */   
/*  61:    */   public void clearIntReq()
/*  62:    */   {
/*  63:429 */     this.data.setIntReq(DevId10, false);
/*  64:    */   }
/*  65:    */   
/*  66:    */   public void setIntReq()
/*  67:    */   {
/*  68:433 */     if (this.pwfailflag == true) {
/*  69:434 */       this.data.setIntReq(DevId10, this.intena);
/*  70:    */     }
/*  71:    */   }
/*  72:    */   
/*  73:    */   public void ClearFlags(int devcode)
/*  74:    */   {
/*  75:439 */     this.pwfailflag = false;
/*  76:440 */     this.pwgone = false;
/*  77:441 */     this.data.setIntReq(DevId10, false);
/*  78:    */   }
/*  79:    */   
/*  80:    */   public void Interrupt(int command)
/*  81:    */   {
/*  82:445 */     if (((command == 0 ? 1 : 0) & (!this.pwgone ? 1 : 0)) != 0)
/*  83:    */     {
/*  84:446 */       this.pwfailflag = true;
/*  85:447 */       this.pwbtim.start();
/*  86:    */     }
/*  87:449 */     if (command == 0) {
/*  88:449 */       this.pwgone = true;
/*  89:    */     } else {
/*  90:449 */       this.pwgone = false;
/*  91:    */     }
/*  92:450 */     setIntReq();
/*  93:451 */     if (((command >= 65536 ? 1 : 0) & (!this.data.run ? 1 : 0)) != 0) {
/*  94:451 */       Bootit(command);
/*  95:    */     }
/*  96:    */   }
/*  97:    */   
/*  98:    */   private void Bootit(int device)
/*  99:    */   {
/* 100:455 */     for (int entry : boottable) {
/* 101:456 */       if ((entry & 0xF0000) == device)
/* 102:    */       {
/* 103:457 */         if ((entry & 0x8000) == 32768) {
/* 104:457 */           BootLA(entry & 0xFFF);
/* 105:    */         }
/* 106:458 */         if ((entry & 0x4000) == 16384) {
/* 107:458 */           BootLXA(entry & 0xFFF);
/* 108:    */         }
/* 109:459 */         if ((entry & 0x2000) == 8192) {
/* 110:459 */           BootDEP(entry & 0xFFF);
/* 111:    */         }
/* 112:460 */         if ((entry & 0x1000) == 4096) {
/* 113:460 */           BootST();
/* 114:    */         }
/* 115:    */       }
/* 116:    */     }
/* 117:    */   }
/* 118:    */   
/* 119:    */   private void BootLA(int word)
/* 120:    */   {
/* 121:466 */     this.data.state = 1;
/* 122:467 */     this.data.data = word;
/* 123:468 */     this.data.cpma = this.data.data;
/* 124:469 */     this.data.ma = this.data.cpma;
/* 125:    */   }
/* 126:    */   
/* 127:    */   private void BootLXA(int word)
/* 128:    */   {
/* 129:473 */     this.data.state = 1;
/* 130:474 */     this.data.ifr = ((word & 0x38) >> 3);
/* 131:475 */     this.data.ema = (this.data.ifr << 12);
/* 132:476 */     this.data.dfr = (word & 0x7);
/* 133:477 */     this.data.mmena = false;
/* 134:    */   }
/* 135:    */   
/* 136:    */   private void BootDEP(int word)
/* 137:    */   {
/* 138:481 */     this.data.ma = this.data.cpma;
/* 139:482 */     this.data.pc = (this.data.cpma + 1 & 0xFFF);
/* 140:483 */     this.data.mb = word;
/* 141:484 */     this.data.memory[(this.data.ema | this.data.ma)] = this.data.mb;
/* 142:485 */     this.data.cpma = this.data.pc;
/* 143:486 */     this.data.ma = this.data.cpma;
/* 144:    */   }
/* 145:    */   
/* 146:    */   private void BootST()
/* 147:    */   {
/* 148:490 */     this.data.ac = 0;
/* 149:491 */     this.data.link = 0;
/* 150:492 */     this.data.ClearAllFlags();
/* 151:493 */     this.data.msirdis = false;
/* 152:494 */     this.data.run = true;
/* 153:    */   }
/* 154:    */   
/* 155:    */   public void ClearRun(boolean run) {}
/* 156:    */   
/* 157:    */   public void CloseDev(int devcode) {}
/* 158:    */ }


/* Location:           C:\Users\Paul\Downloads\PDP8.jar
 * Qualified Name:     Logic.PowerBoot
 * JD-Core Version:    0.7.0.1
 */